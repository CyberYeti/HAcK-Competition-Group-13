{"ast":null,"code":"var _jsxFileName = \"/Users/roncohen/Documents/Project V2/HAcK-Competition-Group-13/HaCK_Starter_Code/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport ChatGPTDecoder from \"./ChatGPTDecoder\";\nimport LiveSensorData from \"./components/LiveSensorData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:8000\");\nfunction App() {\n  _s();\n  const [pictureStatus, setPictureStatus] = useState(\"\");\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(\"Connected:\", socket.id);\n    });\n    socket.on(\"picture_taken\", data => {\n      setPictureStatus(data.message);\n      setTimeout(() => setPictureStatus(\"\"), 3000);\n    });\n    return () => {\n      socket.off(\"picture_taken\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDD75\\uFE0F Operator Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatGPTDecoder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LiveSensorData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), pictureStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: pictureStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aiL+uh0Apf5uNIDoYYwH3Jc1gaM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","ChatGPTDecoder","LiveSensorData","jsxDEV","_jsxDEV","socket","App","_s","pictureStatus","setPictureStatus","on","console","log","id","data","message","setTimeout","off","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["/Users/roncohen/Documents/Project V2/HAcK-Competition-Group-13/HaCK_Starter_Code/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport ChatGPTDecoder from \"./ChatGPTDecoder\";\nimport LiveSensorData from \"./components/LiveSensorData\";\n\nconst socket = io(\"http://localhost:8000\");\n\nfunction App() {\n  const [pictureStatus, setPictureStatus] = useState(\"\");\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(\"Connected:\", socket.id);\n    });\n\n    socket.on(\"picture_taken\", (data) => {\n      setPictureStatus(data.message);\n      setTimeout(() => setPictureStatus(\"\"), 3000);\n    });\n\n    return () => {\n      socket.off(\"picture_taken\");\n    };\n  }, []);\n\n  return (\n    <div className=\"app\" style={{ padding: \"2rem\" }}>\n      <h1>üïµÔ∏è Operator Dashboard</h1>\n\n      {/* ‚úÖ Show the ChatGPT decoder */}\n      <ChatGPTDecoder />\n\n      {/* ‚úÖ Show the live sensor data */}\n      <LiveSensorData />\n\n      {/* ‚úÖ Status update (optional) */}\n      {pictureStatus && <p style={{ color: \"green\" }}>{pictureStatus}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASM,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdM,MAAM,CAACK,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEP,MAAM,CAACQ,EAAE,CAAC;IACtC,CAAC,CAAC;IAEFR,MAAM,CAACK,EAAE,CAAC,eAAe,EAAGI,IAAI,IAAK;MACnCL,gBAAgB,CAACK,IAAI,CAACC,OAAO,CAAC;MAC9BC,UAAU,CAAC,MAAMP,gBAAgB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAC9C,CAAC,CAAC;IAEF,OAAO,MAAM;MACXJ,MAAM,CAACY,GAAG,CAAC,eAAe,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9CjB,OAAA;MAAAiB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG/BrB,OAAA,CAACH,cAAc;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGlBrB,OAAA,CAACF,cAAc;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGjBjB,aAAa,iBAAIJ,OAAA;MAAGe,KAAK,EAAE;QAAEO,KAAK,EAAE;MAAQ,CAAE;MAAAL,QAAA,EAAEb;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV;AAAClB,EAAA,CAhCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}